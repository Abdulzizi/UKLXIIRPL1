// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

enum Role {
  KASIR
  MANAGER
  ADMIN
}

model MenuItem {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderItems  OrderItem[]
}

model Order {
  id          Int           @id @default(autoincrement())
  table       Table         @relation(fields: [tableId], references: [id])
  tableId     Int
  kasirId     Int
  kasir       User          @relation(fields: [kasirId], references: [id])
  items       OrderItem[]
  total       Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
  transaction Transaction[]
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int
  order      Order    @relation(fields: [orderId], references: [id])
  menuItemId Int
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  quantity   Int
  price      Float
}

model Transaction {
  id            Int           @id @default(autoincrement())
  orderId       Int
  order         Order         @relation(fields: [orderId], references: [id])
  totalPaid     Float
  change        Float
  paymentMethod PaymentMethod
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
}

model Table {
  id        Int         @id @default(autoincrement())
  number    Int         @unique // nomor meja
  capacity  Int //kapasitas meja
  status    TableStatus // Status mejanya
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  orders    Order[]
}

enum TableStatus {
  AVAILABLE
  RESERVED
  OCCUPIED
}

enum PaymentMethod {
  CASH
  CARD
}
